chapter 13 Composition vs. Inheritance

- Composition : 구성
    - 리액트: 여러 개의 컴포넌트를 합쳐서 새로운 컴포넌트를 만드는 것 => 합성
    - 여러개의 컴포넌트들을 어떻게 조합할 것인가?
        - Containment : 담다, 포함하다
            - 하위 컴포넌트를 포함하는 형태의 합성 방법
            - Sidebar나 Dialog 같은 Box 형태의 컴포넌트는 자신의 하위 컴포넌트를 미리 알 수 없다.
            - children 이라는 prop 을 사용해서 조합 -> {props.children}
            - 여러개의 children 집합이 필요한 경우
        - Specialization : 전문화, 특수화
            - WelcomeDialog는 Dialog의 특별한 케이스다.
                - WelcomedDialog는 Dialog의 Specialization
            - 객체지향에서는 상속을 통해 specialization을 구현
            - 리액트에서는 Composition(합성)을 사용하여 specialization을 구현
            - 범용적으로 사용할 수 있는 컴포넌트를 만들고, props를 통해 구체화
        - Inheritance : 상속
            - 다른 컴포넌트로부터 상속을 받아서 새로운 컴포넌트를 만드는 것
            - 리액트에서는 상속보다 composition이 더 효율적이다.
    => 복잡한 컴포넌트를 쪼개서 여러 개의 컴포넌트로 만들고, 만든 컴포넌트들을 조합해서 새로운 컴포넌트를 만들자!
